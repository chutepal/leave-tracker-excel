{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor() {\n      this.isDarkModeSubject = new BehaviorSubject(false);\n      this.isDarkMode$ = this.isDarkModeSubject.asObservable();\n      const savedTheme = localStorage.getItem('theme');\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      const isDark = savedTheme ? savedTheme === 'dark' : prefersDark;\n      this.setTheme(isDark);\n    }\n    toggleTheme() {\n      const currentTheme = this.isDarkModeSubject.value;\n      this.setTheme(!currentTheme);\n    }\n    setTheme(isDark) {\n      this.isDarkModeSubject.next(isDark);\n      localStorage.setItem('theme', isDark ? 'dark' : 'light');\n      if (isDark) {\n        document.body.classList.add('dark-theme');\n        document.body.classList.remove('light-theme');\n      } else {\n        document.body.classList.add('light-theme');\n        document.body.classList.remove('dark-theme');\n      }\n    }\n    get isDarkMode() {\n      return this.isDarkModeSubject.value;\n    }\n    static {\n      this.ɵfac = function ThemeService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ThemeService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ThemeService,\n        factory: ThemeService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ThemeService;\n})();","map":{"version":3,"names":["BehaviorSubject","ThemeService","constructor","isDarkModeSubject","isDarkMode$","asObservable","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","isDark","setTheme","toggleTheme","currentTheme","value","next","setItem","document","body","classList","add","remove","isDarkMode","factory","ɵfac","providedIn"],"sources":["/Users/Pallavi/Documents/Github/leave-tracker-excel/frontend/src/app/services/theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private isDarkModeSubject = new BehaviorSubject<boolean>(false);\n  public isDarkMode$ = this.isDarkModeSubject.asObservable();\n\n  constructor() {\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    \n    const isDark = savedTheme ? savedTheme === 'dark' : prefersDark;\n    this.setTheme(isDark);\n  }\n\n  toggleTheme(): void {\n    const currentTheme = this.isDarkModeSubject.value;\n    this.setTheme(!currentTheme);\n  }\n\n  setTheme(isDark: boolean): void {\n    this.isDarkModeSubject.next(isDark);\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n    \n    if (isDark) {\n      document.body.classList.add('dark-theme');\n      document.body.classList.remove('light-theme');\n    } else {\n      document.body.classList.add('light-theme');\n      document.body.classList.remove('dark-theme');\n    }\n  }\n\n  get isDarkMode(): boolean {\n    return this.isDarkModeSubject.value;\n  }\n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,WAAaC,YAAY;EAAnB,MAAOA,YAAY;IAIvBC,YAAA;MAHQ,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;MACxD,KAAAI,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;MAGxD,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAChD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MAE7E,MAAMC,MAAM,GAAGP,UAAU,GAAGA,UAAU,KAAK,MAAM,GAAGG,WAAW;MAC/D,IAAI,CAACK,QAAQ,CAACD,MAAM,CAAC;IACvB;IAEAE,WAAWA,CAAA;MACT,MAAMC,YAAY,GAAG,IAAI,CAACb,iBAAiB,CAACc,KAAK;MACjD,IAAI,CAACH,QAAQ,CAAC,CAACE,YAAY,CAAC;IAC9B;IAEAF,QAAQA,CAACD,MAAe;MACtB,IAAI,CAACV,iBAAiB,CAACe,IAAI,CAACL,MAAM,CAAC;MACnCN,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEN,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;MAExD,IAAIA,MAAM,EAAE;QACVO,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;QACzCH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;MAC/C,CAAC,MAAM;QACLJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;MAC9C;IACF;IAEA,IAAIC,UAAUA,CAAA;MACZ,OAAO,IAAI,CAACtB,iBAAiB,CAACc,KAAK;IACrC;;;yCAhCWhB,YAAY;MAAA;IAAA;;;eAAZA,YAAY;QAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;QAAAC,UAAA,EAFX;MAAM;IAAA;;SAEP3B,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}